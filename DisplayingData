//Database code
package com.example;

import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

public class DatabaseHandler {
    private final static String url = "jdbc:mysql://localhost:3306/404booksnotfoundlibrary";
    private final static String username = "root";
    private final static String password = "password";

    @SuppressWarnings("exports")
    public static Connection getDatabaseConnection() throws SQLException{
        return DriverManager.getConnection(url,username,password);
    }

    
    public static ObservableList<Book> fetchBooks() throws SQLException {
        ObservableList<Book> books = FXCollections.observableArrayList();
        String query = "SELECT * FROM book";
        Connection libraryConnection = getDatabaseConnection();
        Statement queryStatement = libraryConnection.createStatement();
        ResultSet bookResultSet = queryStatement.executeQuery(query);

        while (bookResultSet.next()) {
            int id = bookResultSet.getInt("id");
            String title = bookResultSet.getString("title");
            String author = bookResultSet.getString("author");
            int publication_year = bookResultSet.getInt("publication_year");
            String genre = bookResultSet.getString("genre");

            Book objectBook = new Book(id, title, author, publication_year, genre);
            books.add(objectBook);
        }
        return books;
    } 
}


//Class Library

package com.example;
import java.sql.SQLException;


import javafx.application.Application;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.stage.Stage;

/**
 * JavaFX App
 */
public class LibraryApp extends Application {

    private static Scene libraryScene;

    @Override
    public void start(Stage libraryStage) {

        Label messageLabel = new Label();
        messageLabel.setTextFill(Color.RED);
        messageLabel.setFont(new Font(18));

        
        TableView <Book> libraryTable = new TableView<>();

        TableColumn<Book,Integer> idColumn = new TableColumn<>("Book ID");
        TableColumn<Book,String> titleColumn = new TableColumn<>("Title");
        TableColumn<Book, String> authorColumn = new TableColumn<>("Author");
        TableColumn<Book,Integer> publication_yearColumn = new TableColumn<>("Publication of the year");
        TableColumn<Book,String> genreColumn = new TableColumn<>("Genre");

        
        idColumn.setCellValueFactory(new PropertyValueFactory<>("id"));
        titleColumn.setCellValueFactory(new PropertyValueFactory<>("title"));
        authorColumn.setCellValueFactory(new PropertyValueFactory<>("author"));
        publication_yearColumn.setCellValueFactory(new PropertyValueFactory<>("publication_year"));
        genreColumn.setCellValueFactory(new PropertyValueFactory<>("genre"));
        
        libraryTable.getColumns().add(idColumn);
        libraryTable.getColumns().add(titleColumn);
        libraryTable.getColumns().add(authorColumn);
        libraryTable.getColumns().add(publication_yearColumn);
        libraryTable.getColumns().add(genreColumn);
        
        Button locateBooksButton = new Button("Locate 404 Books");

        try {
            
           ObservableList<Book> books = DatabaseHandler.fetchBooks();

            
           EventHandler<ActionEvent> locateBooksButtonHandler = new EventHandler<ActionEvent>() {
                @Override
                public void handle(ActionEvent event) {
                    // TODO29: Set the items of the libraryTable to the books observable list using the setItems() method
                    libraryTable.setItems(books);
                }
            };
            
            // Check if the books list is not empty
            if (!books.isEmpty()) {
                // messageLabel displaying "Books found in the database"
                messageLabel.setText("Books found in the database");

                
                locateBooksButton.setOnAction(locateBooksButtonHandler);
            } 
            else {
                // messageLabel displaying "No books found in the database"
                messageLabel.setText("No books found in the database");
            }
        } 
        catch (SQLException exception) {
            // messageLabel displaying "An error occurred while fetching books" with the exception message
            messageLabel.setText("An error occurred while fetching books: " + exception.getMessage());
        }

        
        // VBox layout
       
        VBox verticalBox = new VBox(10, messageLabel,locateBooksButton,libraryTable); // 10px spacing between elements
        

        // Set up the scene and stage
        libraryScene = new Scene(verticalBox, 800, 600);
        libraryStage.setScene(libraryScene);
        libraryStage.setTitle("404 Library Explorer");
        libraryStage.show();
    }

    public static void main(String[] args) {
        launch();
    }
}

//Class Book

package com.example;

public class Book {

    // Fields
    int id;
    String title;
    String author;
    int publicationYear;
    String genre;

    // Constructor
    public Book(int id, String title, String author, int publicationYear, String genre) {
        this.id = id;
        this.title = title;
        this.author = author;
        this.publicationYear = publicationYear;
        this.genre = genre;
    }

    // Getters
    public int getId() {
        return id;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public int getPublicationYear() {
        return publicationYear;
    }

    public String getGenre() {
        return genre;
    }
}
